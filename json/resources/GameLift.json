{
  "Alias": {
    "Name": "AWS::GameLift::Alias",
    "Description": "Information that helps you identify the purpose of this alias.An identifier to associate with this alias. Alias names don't need to be\n            unique.A routing configuration that specifies where traffic is directed for this alias,\n            such as to a fleet or to a message.",
    "Array": false,
    "Type": "AmazonGameLiftAliasRoutingStrategy",
    "Required": "Yes",
    "UpdateRequires": "No interruption"
  },
  "Build": {
    "Name": "AWS::GameLift::Build",
    "Description": "An identifier to associate with this build. Build names don't need to be\n            unique.The Amazon Simple Storage Service (Amazon S3) location where your build package files are located.A version to associate with this build. Version is useful if you want to track\n            updates to your build package files. Versions don't need to be unique.",
    "Array": false,
    "Type": "String",
    "Required": "No",
    "UpdateRequires": "No interruption"
  },
  "Fleet": {
    "Name": "AWS::GameLift::Fleet",
    "Description": "The unique identifier for the build that you want to use with this fleet.Information that helps you identify the purpose of this fleet.The number of EC2 instances that you want in this fleet.The incoming traffic, expressed as IP ranges and port numbers, that is permitted to\n            access the game server. If you don't specify values, no traffic is permitted to your\n            game servers.The type of EC2 instances that the fleet uses. EC2 instance types define the CPU,\n            memory, storage, and networking capacity of the fleet's hosts. For more information\n            about the instance types that are supported by GameLift, see the EC2InstanceType parameter in the\n            Amazon GameLift API Reference.The path to game-session log files that are generated by your game server, with the\n            slashes (\\) escaped. After a game session has been terminated, GameLift\n            captures and stores the logs in an S3 bucket.The maximum number of EC2 instances that you want to allow in this fleet. By default, AWS CloudFormation, sets this property to 1.The minimum number of EC2 instances that you want to allow in this fleet. By default, AWS CloudFormation, sets this property to 0.An identifier to associate with this fleet. Fleet names don't need to be\n            unique.The parameters that are required to launch your game server. Specify these\n            parameters as a string of command-line parameters, such as +sv_port 33435\n              +start_lobby.The location of your game server that GameLift launches. You must escape the slashes\n              (\\) and use the following pattern:\n                C:\\\\game\\\\launchpath. For example,\n            if your game server files are in the MyGame folder, the path should be\n              C:\\\\game\\\\MyGame\\\\server.exe.",
    "Array": true,
    "Type": "String",
    "Required": "Yes",
    "UpdateRequires": "Replacement"
  }
}
